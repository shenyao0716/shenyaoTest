package com.MeetingRoomMS.Dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import net.sf.json.JSONObject;

import com.MeetingRoomMS.Entity.user;
import com.MeetingRoomMS.Tool.DBConn;


public class UserDao {

	private Connection conn;
	private PreparedStatement prst;
	private ResultSet rs;
	
	public List<user> getUserInfo(){
		conn=DBConn.getCon();
		List<user> list=new ArrayList<user>();
		try {
			prst=conn.prepareStatement("select * from Users");
			rs=prst.executeQuery();
			while(rs.next())
			{
				user u=new user();
				u.setUserid(rs.getInt("userid"));
				u.setUsername(rs.getString("username"));
				u.setUserpwd(rs.getString("userpwd"));
				u.setOpenid(rs.getInt("openid"));
				u.setMemo(rs.getString("memo"));
				u.setName(rs.getString("name"));
				u.setPhone(rs.getString("phone"));
				
				list.add(u);
			}

		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}finally{
			DBConn.closeDB(conn, prst, rs);
		}
			return list;
	}
	
	
	public int updateUserInfo(JSONObject uinfo){
		conn=DBConn.getCon();
		
		try {
			prst=conn.prepareStatement("update Users set username=?,userpwd=?,memo=?,name=?,phone=? where userid=?");
			prst.setString(1, uinfo.getString("duname"));
			prst.setString(2, uinfo.getString("dpwd"));
			prst.setString(3, uinfo.getString("dmemo"));
			prst.setString(4, uinfo.getString("dname"));
			prst.setString(5, uinfo.getString("dphone"));
			prst.setString(6, uinfo.getString("did"));
			
			prst.executeUpdate();
			return 1;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();		
			return 0;
		}finally{
			DBConn.closeDB(conn, prst, rs);
		}	
	}
	
	public int addUserInfo(JSONObject uinfo){
		conn=DBConn.getCon();
		try {
			prst=conn.prepareStatement("insert into Users (username,userpwd,memo,name,phone)"+"values(?,?,?,?,?)");
			prst.setString(1, uinfo.getString("duname"));
			prst.setString(2, uinfo.getString("dpwd"));
			prst.setString(3, uinfo.getString("dmemo"));
			prst.setString(4, uinfo.getString("dname"));
			prst.setString(5, uinfo.getString("dphone"));
			
			prst.executeUpdate();
			return 1;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();		
			return 0;
		}finally{
			DBConn.closeDB(conn, prst, rs);
		}	
	}
	
	
	public int deleteUserById(int id){
		conn=DBConn.getCon();
		try {
			prst=conn.prepareStatement("delete from Users where userid="+id);
			prst.executeUpdate();
		    return 1;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
	    	   return 0;
		}finally{
		       DBConn.closeDB(conn, prst, rs);
	      }
	}
	

}
